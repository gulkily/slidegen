Course Title: Building with AI: Modern Development and Language Model Applications
Course Duration: 2-4 weeks
Schedule: 2-5 days per week, 1-3 hours per day
Goal: Develop a fully functional, Git-backed web messaging application using AI-driven code generation.
Tools/Technologies: Python3, SQLite, Git/GitHub, HTML/CSS/JavaScript (optional frameworks like React)

------------------------------------
Day 1: Foundations and Basic Setup
------------------------------------
Objective:
Introduce core concepts and prepare students to develop using AI-driven methods. By the end of this day, students should understand how to utilize language models to generate code, navigate Git/GitHub, and establish the foundation of a web application.

Part 1: Course Introduction & Goals
- Overview of the course, objectives, and expected outcomes.
- Demo: Brief demonstration of the final application (Git-backed messaging functionality).
- Explanation of how AI can assist in development: using prompts, code generation, and troubleshooting.
- Setup: Create GitHub accounts and fork the starter repository.

Part 2: Introduction to Git, GitHub, and AI-driven Coding
- Basic Git commands: clone, commit, push, pull, and managing branches.
- Understanding how GitHub acts as a distributed backend (message storage in forks).
- Using an AI tool to generate Git commands and code snippets.
- Hands-On: Students clone the starter repo and configure their local development environment.

Part 3: Backend Fundamentals with AI
- Setting up a basic backend using Python and SQLite.
- AI Prompts: Writing initial scripts with AI guidance (e.g., a simple Python server setup).
- Demo and Exercise: AI-assisted configuration of a local web server and creation of a simple API endpoint.

Part 4: Connecting Frontend and Backend
- Basics of HTML/CSS and using AI to generate boilerplate frontend code.
- Hands-On: Students build a minimal HTML page that communicates with the backend API.
- Milestone: By the end of Day 1, students should have a functioning backend and a basic frontend setup capable of simple interaction.
